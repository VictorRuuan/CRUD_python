{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/VictorRuuan/CRUD_python/blob/main/Imers%C3%A3o%20IA%20-%20Agentes\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%pip -q install google-genai"
      ],
      "metadata": {
        "id": "UCCbECexLk_h"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Configura a API Key do Google Gemini\n",
        "\n",
        "import os\n",
        "from google.colab import userdata\n",
        "\n",
        "os.environ[\"GOOGLE_API_KEY\"] = userdata.get('GOOGLE_API_KEY')"
      ],
      "metadata": {
        "id": "NfCqHo1tLk8P"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Configura o cliente da SDK do Gemini\n",
        "\n",
        "from google import genai\n",
        "\n",
        "client = genai.Client()\n",
        "\n",
        "MODEL_ID = \"gemini-2.0-flash\""
      ],
      "metadata": {
        "id": "bV4w0H5TLk5g"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Pergunta ao Gemini uma informação mais recente que seu conhecimento\n",
        "\n",
        "from IPython.display import HTML, Markdown\n",
        "\n",
        "# Perguntar pro modelo quando é a próxima imersão de IA ###############################################\n",
        "resposta = client.models.generate_content(\n",
        "    model=MODEL_ID,\n",
        "    contents='Quando é a próxima Imersão IA com Google Gemini da Alura?',\n",
        ")\n",
        "\n",
        "# Exibe a resposta na tela\n",
        "display(Markdown(f\"Resposta:\\n {response.text}\"))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 64
        },
        "id": "Y9cBAz02xZt9",
        "outputId": "7fe0c936-70a2-4b79-9602-be4a1c538972"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "Resposta:\n A próxima Imersão IA com Google Gemini da Alura aconteceu entre os dias 12 e 16 de maio de 2025. As inscrições para esta edição se encerraram no dia 11 de maio de 2025."
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Pergunta ao Gemini uma informação utilizando a busca do Google como contexto\n",
        "\n",
        "response = client.models.generate_content(\n",
        "    model=MODEL_ID,\n",
        "    contents='Quando é a próxima Imersão IA com Google Gemini da Alura?',\n",
        "    config={\"tools\": [{\"google_search\": {}}]}\n",
        ")\n",
        "\n",
        "# Exibe a resposta na tela\n",
        "display(Markdown(f\"Resposta:\\n {response.text}\"))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 64
        },
        "id": "lc2JPA92xbnp",
        "outputId": "4d0fed41-83a2-41f4-9cf6-7890755b5383"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "Resposta:\n A próxima Imersão IA com Google Gemini da Alura acontecerá de 12 a 16 de maio de 2025. As inscrições podem ser feitas até o dia 11 de maio de 2025."
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Exibe a busca\n",
        "print(f\"Busca realizada: {response.candidates[0].grounding_metadata.web_search_queries}\")\n",
        "# Exibe as URLs nas quais ele se baseou\n",
        "print(f\"Páginas utilizadas na resposta: {', '.join([site.web.title for site in response.candidates[0].grounding_metadata.grounding_chunks])}\")\n",
        "print()\n",
        "display(HTML(response.candidates[0].grounding_metadata.search_entry_point.rendered_content))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 117
        },
        "id": "6Cg0KNJGMgC5",
        "outputId": "b3db5eb2-d0e5-4263-936a-037074a5e155"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Busca realizada: ['Alura Imersão IA com Google Gemini próxima edição']\n",
            "Páginas utilizadas na resposta: thallesbenicio.com.br\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<style>\n",
              ".container {\n",
              "  align-items: center;\n",
              "  border-radius: 8px;\n",
              "  display: flex;\n",
              "  font-family: Google Sans, Roboto, sans-serif;\n",
              "  font-size: 14px;\n",
              "  line-height: 20px;\n",
              "  padding: 8px 12px;\n",
              "}\n",
              ".chip {\n",
              "  display: inline-block;\n",
              "  border: solid 1px;\n",
              "  border-radius: 16px;\n",
              "  min-width: 14px;\n",
              "  padding: 5px 16px;\n",
              "  text-align: center;\n",
              "  user-select: none;\n",
              "  margin: 0 8px;\n",
              "  -webkit-tap-highlight-color: transparent;\n",
              "}\n",
              ".carousel {\n",
              "  overflow: auto;\n",
              "  scrollbar-width: none;\n",
              "  white-space: nowrap;\n",
              "  margin-right: -12px;\n",
              "}\n",
              ".headline {\n",
              "  display: flex;\n",
              "  margin-right: 4px;\n",
              "}\n",
              ".gradient-container {\n",
              "  position: relative;\n",
              "}\n",
              ".gradient {\n",
              "  position: absolute;\n",
              "  transform: translate(3px, -9px);\n",
              "  height: 36px;\n",
              "  width: 9px;\n",
              "}\n",
              "@media (prefers-color-scheme: light) {\n",
              "  .container {\n",
              "    background-color: #fafafa;\n",
              "    box-shadow: 0 0 0 1px #0000000f;\n",
              "  }\n",
              "  .headline-label {\n",
              "    color: #1f1f1f;\n",
              "  }\n",
              "  .chip {\n",
              "    background-color: #ffffff;\n",
              "    border-color: #d2d2d2;\n",
              "    color: #5e5e5e;\n",
              "    text-decoration: none;\n",
              "  }\n",
              "  .chip:hover {\n",
              "    background-color: #f2f2f2;\n",
              "  }\n",
              "  .chip:focus {\n",
              "    background-color: #f2f2f2;\n",
              "  }\n",
              "  .chip:active {\n",
              "    background-color: #d8d8d8;\n",
              "    border-color: #b6b6b6;\n",
              "  }\n",
              "  .logo-dark {\n",
              "    display: none;\n",
              "  }\n",
              "  .gradient {\n",
              "    background: linear-gradient(90deg, #fafafa 15%, #fafafa00 100%);\n",
              "  }\n",
              "}\n",
              "@media (prefers-color-scheme: dark) {\n",
              "  .container {\n",
              "    background-color: #1f1f1f;\n",
              "    box-shadow: 0 0 0 1px #ffffff26;\n",
              "  }\n",
              "  .headline-label {\n",
              "    color: #fff;\n",
              "  }\n",
              "  .chip {\n",
              "    background-color: #2c2c2c;\n",
              "    border-color: #3c4043;\n",
              "    color: #fff;\n",
              "    text-decoration: none;\n",
              "  }\n",
              "  .chip:hover {\n",
              "    background-color: #353536;\n",
              "  }\n",
              "  .chip:focus {\n",
              "    background-color: #353536;\n",
              "  }\n",
              "  .chip:active {\n",
              "    background-color: #464849;\n",
              "    border-color: #53575b;\n",
              "  }\n",
              "  .logo-light {\n",
              "    display: none;\n",
              "  }\n",
              "  .gradient {\n",
              "    background: linear-gradient(90deg, #1f1f1f 15%, #1f1f1f00 100%);\n",
              "  }\n",
              "}\n",
              "</style>\n",
              "<div class=\"container\">\n",
              "  <div class=\"headline\">\n",
              "    <svg class=\"logo-light\" width=\"18\" height=\"18\" viewBox=\"9 9 35 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n",
              "      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.8622 27.0064C42.8622 25.7839 42.7525 24.6084 42.5487 23.4799H26.3109V30.1568H35.5897C35.1821 32.3041 33.9596 34.1222 32.1258 35.3448V39.6864H37.7213C40.9814 36.677 42.8622 32.2571 42.8622 27.0064V27.0064Z\" fill=\"#4285F4\"/>\n",
              "      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.3109 43.8555C30.9659 43.8555 34.8687 42.3195 37.7213 39.6863L32.1258 35.3447C30.5898 36.3792 28.6306 37.0061 26.3109 37.0061C21.8282 37.0061 18.0195 33.9811 16.6559 29.906H10.9194V34.3573C13.7563 39.9841 19.5712 43.8555 26.3109 43.8555V43.8555Z\" fill=\"#34A853\"/>\n",
              "      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.6559 29.8904C16.3111 28.8559 16.1074 27.7588 16.1074 26.6146C16.1074 25.4704 16.3111 24.3733 16.6559 23.3388V18.8875H10.9194C9.74388 21.2072 9.06992 23.8247 9.06992 26.6146C9.06992 29.4045 9.74388 32.022 10.9194 34.3417L15.3864 30.8621L16.6559 29.8904V29.8904Z\" fill=\"#FBBC05\"/>\n",
              "      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.3109 16.2386C28.85 16.2386 31.107 17.1164 32.9095 18.8091L37.8466 13.8719C34.853 11.082 30.9659 9.3736 26.3109 9.3736C19.5712 9.3736 13.7563 13.245 10.9194 18.8875L16.6559 23.3388C18.0195 19.2636 21.8282 16.2386 26.3109 16.2386V16.2386Z\" fill=\"#EA4335\"/>\n",
              "    </svg>\n",
              "    <svg class=\"logo-dark\" width=\"18\" height=\"18\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\">\n",
              "      <circle cx=\"24\" cy=\"23\" fill=\"#FFF\" r=\"22\"/>\n",
              "      <path d=\"M33.76 34.26c2.75-2.56 4.49-6.37 4.49-11.26 0-.89-.08-1.84-.29-3H24.01v5.99h8.03c-.4 2.02-1.5 3.56-3.07 4.56v.75l3.91 2.97h.88z\" fill=\"#4285F4\"/>\n",
              "      <path d=\"M15.58 25.77A8.845 8.845 0 0 0 24 31.86c1.92 0 3.62-.46 4.97-1.31l4.79 3.71C31.14 36.7 27.65 38 24 38c-5.93 0-11.01-3.4-13.45-8.36l.17-1.01 4.06-2.85h.8z\" fill=\"#34A853\"/>\n",
              "      <path d=\"M15.59 20.21a8.864 8.864 0 0 0 0 5.58l-5.03 3.86c-.98-2-1.53-4.25-1.53-6.64 0-2.39.55-4.64 1.53-6.64l1-.22 3.81 2.98.22 1.08z\" fill=\"#FBBC05\"/>\n",
              "      <path d=\"M24 14.14c2.11 0 4.02.75 5.52 1.98l4.36-4.36C31.22 9.43 27.81 8 24 8c-5.93 0-11.01 3.4-13.45 8.36l5.03 3.85A8.86 8.86 0 0 1 24 14.14z\" fill=\"#EA4335\"/>\n",
              "    </svg>\n",
              "    <div class=\"gradient-container\"><div class=\"gradient\"></div></div>\n",
              "  </div>\n",
              "  <div class=\"carousel\">\n",
              "    <a class=\"chip\" href=\"https://vertexaisearch.cloud.google.com/grounding-api-redirect/AbF9wXE6T8A96speYW3yHUZUsI1RIhThnSPYrYcaro0wh9jaPAQnpJ5iPV8UnkcGj0cV5R6y9CDOcqJMEvbAPedf0W8vyU5ORHD-Fem6IzaB7wPW0SIk9AkVznMt7YXB4Cn9QQNIc9uS1UL1lOu5E6mVjHkWhXcuOpXXbqPffSe3YdCKmNz9Mq8xNsQ1O2HAcErtS6HdTxQKGrtR2_0YgoKc8PhM9LJaXWYGExBJWo6186W78-eBtYtIlM-8cYODwWXLzDocyXrUEtY7quk=\">Alura Imersão IA com Google Gemini próxima edição</a>\n",
              "  </div>\n",
              "</div>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Instalar Framework de agentes do Google ################################################\n",
        "!pip install -q google-adk"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a1eRPalxEnj7",
        "outputId": "070cc294-c3bc-4db4-faa0-ac7403f16732"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/1.2 MB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.3/1.2 MB\u001b[0m \u001b[31m10.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m19.2 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m15.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m232.1/232.1 kB\u001b[0m \u001b[31m16.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m95.2/95.2 kB\u001b[0m \u001b[31m7.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m217.1/217.1 kB\u001b[0m \u001b[31m17.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m334.1/334.1 kB\u001b[0m \u001b[31m22.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m125.1/125.1 kB\u001b[0m \u001b[31m11.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m65.8/65.8 kB\u001b[0m \u001b[31m5.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m119.0/119.0 kB\u001b[0m \u001b[31m11.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.9/194.9 kB\u001b[0m \u001b[31m17.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.5/62.5 kB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m103.3/103.3 kB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.4/44.4 kB\u001b[0m \u001b[31m3.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m72.0/72.0 kB\u001b[0m \u001b[31m6.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "metadata": {
        "id": "aePV2bdfDeoW"
      },
      "outputs": [],
      "source": [
        "from google.adk.agents import Agent\n",
        "from google.adk.runners import Runner\n",
        "from google.adk.sessions import InMemorySessionService\n",
        "from google.adk.tools import google_search\n",
        "from google.genai import types  # Para criar conteúdos (Content e Part)\n",
        "from datetime import date\n",
        "import textwrap # Para formatar melhor a saída de texto\n",
        "from IPython.display import display, Markdown # Para exibir texto formatado no Colab\n",
        "import requests # Para fazer requisições HTTP\n",
        "import warnings\n",
        "\n",
        "warnings.filterwarnings(\"ignore\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Função auxiliar que envia uma mensagem para um agente via Runner e retorna a resposta final\n",
        "def call_agent(agent: Agent, message_text: str) -> str:\n",
        "    # Cria um serviço de sessão em memória\n",
        "    session_service = InMemorySessionService()\n",
        "    # Cria uma nova sessão (você pode personalizar os IDs conforme necessário)\n",
        "    session = session_service.create_session(app_name=agent.name, user_id=\"user1\", session_id=\"session1\")\n",
        "    # Cria um Runner para o agente\n",
        "    runner = Runner(agent=agent, app_name=agent.name, session_service=session_service)\n",
        "    # Cria o conteúdo da mensagem de entrada\n",
        "    content = types.Content(role=\"user\", parts=[types.Part(text=message_text)])\n",
        "\n",
        "    final_response = \"\"\n",
        "    # Itera assincronamente pelos eventos retornados durante a execução do agente\n",
        "    for event in runner.run(user_id=\"user1\", session_id=\"session1\", new_message=content):\n",
        "        if event.is_final_response():\n",
        "          for part in event.content.parts:\n",
        "            if part.text is not None:\n",
        "              final_response += part.text\n",
        "              final_response += \"\\n\"\n",
        "    return final_response"
      ],
      "metadata": {
        "id": "_xP4lWhsS5ko"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Função auxiliar para exibir texto formatado em Markdown no Colab\n",
        "def to_markdown(text):\n",
        "  text = text.replace('•', '  *')\n",
        "  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))"
      ],
      "metadata": {
        "id": "8dosiodaxfFR"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##########################################\n",
        "# --- Agente 1: Buscador de Notícias --- #\n",
        "##########################################\n",
        "def agente_buscador(topico, data_de_hoje):\n",
        "\n",
        "    buscador = Agent(\n",
        "        name=\"agente_buscador\",\n",
        "        model=\"gemini-2.0-flash\",\n",
        "        instruction=\"\"\"\n",
        "        Você é um assistente de pesquisa. A sua tarefa é usar a ferramenta de busca do google (google_search)\n",
        "        para recuperar as últimas notícias de lançamentos muito relevantes sobre o tópico abaixo.\n",
        "        Foque em no máximo 5 lançamentos relevantes, com base na quantidade e entusiasmo das notícias sobre ele.\n",
        "        Se um tema tiver poucas notícias ou reações entusiasmadas, é possível que ele não seja tão relevante assim\n",
        "        e pode ser substituído por outro que tenha mais.\n",
        "        Esses lançamentos relevantes devem ser atuais, de no máximo um mês antes da data de hoje.\n",
        "        \"\"\",\n",
        "        description=\"Agente que busca informações no Google\",\n",
        "        tools=[google_search]\n",
        "    )\n",
        "\n",
        "    entrada_do_agente_buscador = f\"Tópico: {topico}\\nData de hoje: {data_de_hoje}\"\n",
        "\n",
        "    lancamentos = call_agent(buscador, entrada_do_agente_buscador)\n",
        "    return lancamentos"
      ],
      "metadata": {
        "id": "o8bqIfi_DyH8"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "################################################\n",
        "# --- Agente 2: Planejador de posts --- #\n",
        "################################################\n",
        "def agente_planejador(topico, lancamentos_buscados):\n",
        "    planejador = Agent(\n",
        "        name=\"agente_planejador\",\n",
        "        model=\"gemini-2.0-flash\",\n",
        "        # Inserir as instruções do Agente Planejador #################################################\n",
        "        instruction=\"\"\"\n",
        "        Você é um planejador de conteúdo, especialista em redes sociais. Com base na lista de\n",
        "        lançamentos mais recentes e relevantes buscador, você deve:\n",
        "        usar a ferramenta de busca do Google (google_search) para criar um plano sobre\n",
        "        quais são os pontos mais relevantes que poderíamos abordar em um post sobre\n",
        "        cada um deles. Você também pode usar o (google_search) para encontrar mais\n",
        "        informações sobre os temas e aprofundar.\n",
        "        Ao final, você irá escolher o tema mais relevante entre eles com base nas suas pesquisas\n",
        "        e retornar esse tema, seus pontos mais relevantes, e um plano com os assuntos\n",
        "        a serem abordados no post que será escrito posteriormente.\n",
        "        \"\"\",\n",
        "        description=\"Agente que planeja posts\",\n",
        "        tools=[google_search]\n",
        "    )\n",
        "\n",
        "    entrada_do_agente_planejador = f\"Tópico:{topico}\\nLançamentos buscados: {lancamentos_buscados}\"\n",
        "    # Executa o agente\n",
        "    plano_do_post = call_agent(planejador, entrada_do_agente_planejador)\n",
        "    return plano_do_post"
      ],
      "metadata": {
        "id": "y3VO1uo5_ghO"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "######################################\n",
        "# --- Agente 3: Redator do Post --- #\n",
        "######################################\n",
        "def agente_redator(topico, plano_de_post):\n",
        "    redator = Agent(\n",
        "        name=\"agente_redator\",\n",
        "        model=\"gemini-2.0-flash\",\n",
        "        instruction=\"\"\"\n",
        "            Você é um Redator Criativo especializado em criar posts virais para redes sociais.\n",
        "            Você escreve posts para a empresa Alura, a maior escola online de tecnologia do Brasil.\n",
        "            Utilize o tema fornecido no plano de post e os pontos mais relevantes fornecidos e, com base nisso,\n",
        "            escreva um rascunho de post para Instagram sobre o tema indicado.\n",
        "            O post deve ser engajador, informativo, com linguagem simples e incluir 2 a 4 hashtags no final.\n",
        "            \"\"\",\n",
        "        description=\"Agente redator de posts engajadores para Instagram\"\n",
        "    )\n",
        "    entrada_do_agente_redator = f\"Tópico: {topico}\\nPlano de post: {plano_de_post}\"\n",
        "    # Executa o agente\n",
        "    rascunho = call_agent(redator, entrada_do_agente_redator)\n",
        "    return rascunho"
      ],
      "metadata": {
        "id": "uOqlg2TRLVh1"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##########################################\n",
        "# --- Agente 4: Revisor de Qualidade --- #\n",
        "##########################################\n",
        "def agente_revisor(topico, rascunho_gerado):\n",
        "    revisor = Agent(\n",
        "        name=\"agente_revisor\",\n",
        "        model=\"gemini-2.0-flash\",\n",
        "        instruction=\"\"\"\n",
        "            Você é um Editor e Revisor de Conteúdo meticuloso, especializado em posts para redes sociais, com foco no Instagram.\n",
        "            Por ter um público jovem, entre 18 e 30 anos, use um tom de escrita adequado.\n",
        "            Revise o rascunho de post de Instagram abaixo sobre o tópico indicado, verificando clareza, concisão, correção e tom.\n",
        "            Se o rascunho estiver bom, responda apenas 'O rascunho está ótimo e pronto para publicar!'.\n",
        "            Caso haja problemas, aponte-os e sugira melhorias.\n",
        "            \"\"\",\n",
        "        description=\"Agente revisor de post para redes sociais.\"\n",
        "    )\n",
        "    entrada_do_agente_revisor = f\"Tópico: {topico}\\nRascunho: {rascunho_gerado}\"\n",
        "    # Executa o agente\n",
        "    texto_revisado = call_agent(revisor, entrada_do_agente_revisor)\n",
        "    return texto_revisado"
      ],
      "metadata": {
        "id": "_aTb1SdkLeT6"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_de_hoje = date.today().strftime(\"%d/%m/%Y\")\n",
        "\n",
        "print(\"🚀 Iniciando o Sistema de Criação de Posts para Instagram com 4 Agentes 🚀\")\n",
        "\n",
        "# --- Obter o Tópico do Usuário ---\n",
        "topico = input(\"❓ Por favor, digite o TÓPICO sobre o qual você quer criar o post de tendências: \")\n",
        "\n",
        "# Inserir lógica do sistema de agentes ################################################\n",
        "if not topico:\n",
        "    print(\"Você esqueceu de digitar o tópico!\")\n",
        "else:\n",
        "    print(f\"Maravilha! Vamos então criar o post sobre novidades em {topico}\")\n",
        "\n",
        "    lancamentos_buscados = agente_buscador(topico, data_de_hoje)\n",
        "    print(\"\\n--- 📝 Resultado do Agente 1 (Buscador) ---\\n\")\n",
        "    display(to_markdown(lancamentos_buscados))\n",
        "    print(\"--------------------------------------------------------------\")\n",
        "\n",
        "    plano_de_post = agente_planejador(topico, lancamentos_buscados)\n",
        "    print(\"\\n--- 📝 Resultado do Agente 2 (Planejador) ---\\n\")\n",
        "    display(to_markdown(plano_de_post))\n",
        "    print(\"--------------------------------------------------------------\")\n",
        "\n",
        "    rascunho_de_post = agente_redator(topico, plano_de_post)\n",
        "    print(\"\\n--- 📝 Resultado do Agente 3 (Redator) ---\\n\")\n",
        "    display(to_markdown(rascunho_de_post))\n",
        "    print(\"--------------------------------------------------------------\")\n",
        "\n",
        "    post_final = agente_revisor(topico, rascunho_de_post)\n",
        "    print(\"\\n--- 📝 Resultado do Agente 4 (Revisor) ---\\n\")\n",
        "    display(to_markdown(post_final))\n",
        "    print(\"--------------------------------------------------------------\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "6xzI6LKzxxnN",
        "outputId": "579c54cd-3da1-423e-8f67-03490b257e53"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "🚀 Iniciando o Sistema de Criação de Posts para Instagram com 4 Agentes 🚀\n",
            "❓ Por favor, digite o TÓPICO sobre o qual você quer criar o post de tendências: agentes de IA\n",
            "Maravilha! Vamos então criar o post sobre novidades em agentes de IA\n",
            "\n",
            "--- 📝 Resultado do Agente 1 (Buscador) ---\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "> Para identificar lançamentos recentes e relevantes no campo de agentes de IA, usarei a pesquisa do Google para encontrar notícias e anúncios dos últimos meses. Focarei em lançamentos que geraram cobertura significativa e discussão.\n> \n> \n> Com base nas notícias mais recentes sobre agentes de IA, aqui estão alguns lançamentos e desenvolvimentos notáveis:\n> \n> 1.  **Microsoft Build 2025: A Era dos Agentes de IA e a Open Agentic Web:** A Microsoft está posicionando o Build 2025 como o início de uma nova era focada em agentes de IA e na construção de uma \"open agentic web\". Eles estão lançando novas capacidades no Azure AI Foundry Agent Service que permitem aos desenvolvedores orquestrar múltiplos agentes especializados para executar tarefas complexas, integrando Semantic Kernel e AutoGen em um SDK unificado. A Microsoft também está apresentando agentes pré-configurados, blocos de construção para agentes personalizados e capacidades multi-agente. Além disso, o Microsoft Entra Agent ID está em preview, oferecendo identidades únicas para agentes criados no Microsoft Copilot Studio ou Azure AI Foundry.\n> 2.  **GitHub Copilot como um Agente de IA:** A unidade GitHub da Microsoft apresentou o Copilot como um agente de inteligência artificial capaz de assumir tarefas de programação específicas e informar os desenvolvedores quando concluídas. O Copilot pode ser instruído a corrigir bugs ou reescrever códigos, enviando o trabalho para revisão e permitindo que os desenvolvedores aceitem e adicionem as modificações. O agente de codificação é alimentado pelo modelo de IA Claude 3.7 Sonnet da Anthropic. O GitHub Copilot Chat está se tornando open-source no VS Code.\n> 3.  **Copilot Studio com Agentes de IA em Equipe e Integração com WhatsApp:** O Copilot Studio da Microsoft agora permite a criação de agentes que trabalham em conjunto como \"funcionários digitais\", dividindo tarefas complexas como busca de dados, redação de relatórios e agendamento de reuniões. A partir de julho, as empresas poderão usar esses agentes no WhatsApp para facilitar o contato com os clientes diretamente no aplicativo de mensagens.\n> 4.  **Adoção de Agentes de IA em Várias Indústrias:** Agentes de IA estão remodelando diversos setores, como governo, saúde e finanças, através da automação e tomada de decisão aprimorada. Eles estão sendo usados para gerenciar cadeias de suprimentos, detectar bloqueios logísticos, interagir com pacientes, realizar planos de tratamento e otimizar operações financeiras. A B3 também está adotando agentes de IA para revolucionar suas operações em 2025.\n> 5.  **Work Trend Index 2025 da Microsoft:** O relatório Work Trend Index 2025 da Microsoft aponta que 2025 será um ano decisivo para as organizações repensarem seus negócios com a adoção de IA e agentes inteligentes. O relatório destaca a importância de métricas como a proporção entre humanos e agentes e apresenta agentes Researcher e Analyst, alimentados por modelos de raciocínio profundo da OpenAI.\n> \n> Esses lançamentos e desenvolvimentos indicam um foco crescente na utilização de agentes de IA para automatizar tarefas, aumentar a produtividade e transformar a forma como as empresas operam e interagem com os clientes.\n> \n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--------------------------------------------------------------\n",
            "\n",
            "--- 📝 Resultado do Agente 2 (Planejador) ---\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "> Com base nos lançamentos recentes e relevantes sobre agentes de IA, vamos explorar os pontos mais relevantes para um post sobre cada um deles e, em seguida, escolher o tema mais interessante.\n> \n> **1. Microsoft Build 2025: A Era dos Agentes de IA e a Open Agentic Web**\n> \n> *   **Pontos Relevantes:**\n>     *   Lançamento de novas capacidades no Azure AI Foundry Agent Service para orquestrar múltiplos agentes.\n>     *   Integração de Semantic Kernel e AutoGen em um SDK unificado.\n>     *   Apresentação de agentes pré-configurados e blocos de construção para agentes personalizados.\n>     *   Preview do Microsoft Entra Agent ID para identidades únicas de agentes.\n> *   **Possíveis Tópicos para o Post:**\n>     *   O que significa a \"open agentic web\" e como ela pode transformar a internet?\n>     *   Como o Azure AI Foundry Agent Service facilita a criação e orquestração de agentes de IA?\n>     *   Quais são os benefícios de ter identidades únicas para agentes de IA (Microsoft Entra Agent ID)?\n> \n> **2. GitHub Copilot como um Agente de IA**\n> \n> *   **Pontos Relevantes:**\n>     *   Copilot agora é um agente capaz de assumir tarefas de programação específicas.\n>     *   Usa o modelo de IA Claude 3.7 Sonnet da Anthropic.\n>     *   Pode corrigir bugs, reescrever códigos e enviar o trabalho para revisão.\n>     *   GitHub Copilot Chat se tornando open-source no VS Code.\n> *   **Possíveis Tópicos para o Post:**\n>     *   Como o GitHub Copilot está evoluindo para se tornar um agente de IA completo?\n>     *   Quais são as vantagens de usar o Copilot para automatizar tarefas de programação?\n>     *   Como a integração com o modelo Claude 3.7 Sonnet da Anthropic melhora o Copilot?\n>     *   O que significa a abertura do código do GitHub Copilot Chat para a comunidade?\n> \n> **3. Copilot Studio com Agentes de IA em Equipe e Integração com WhatsApp**\n> \n> *   **Pontos Relevantes:**\n>     *   Criação de agentes que trabalham em equipe como \"funcionários digitais\".\n>     *   Divisão de tarefas complexas entre agentes.\n>     *   Integração com WhatsApp para facilitar o contato com clientes.\n> *   **Possíveis Tópicos para o Post:**\n>     *   Como o Copilot Studio permite criar equipes de agentes de IA?\n>     *   Quais são os casos de uso mais promissores para agentes de IA no WhatsApp?\n>     *   Como a automação de tarefas complexas impacta a produtividade das empresas?\n> \n> **4. Adoção de Agentes de IA em Várias Indústrias**\n> \n> *   **Pontos Relevantes:**\n>     *   Agentes de IA estão remodelando diversos setores (governo, saúde, finanças, etc.).\n>     *   Usados para gerenciar cadeias de suprimentos, detectar bloqueios logísticos, interagir com pacientes, realizar planos de tratamento e otimizar operações financeiras.\n>     *   B3 adotando agentes de IA para revolucionar suas operações.\n> *   **Possíveis Tópicos para o Post:**\n>     *   Como os agentes de IA estão transformando diferentes indústrias?\n>     *   Quais são os casos de uso mais inovadores de agentes de IA em cada setor?\n>     *   Como a B3 planeja usar agentes de IA para revolucionar suas operações?\n> \n> **5. Work Trend Index 2025 da Microsoft**\n> \n> *   **Pontos Relevantes:**\n>     *   2025 será um ano decisivo para a adoção de IA e agentes inteligentes.\n>     *   Importância de métricas como a proporção entre humanos e agentes.\n>     *   Apresentação dos agentes Researcher e Analyst, alimentados por modelos de raciocínio profundo da OpenAI.\n> *   **Possíveis Tópicos para o Post:**\n>     *   Por que 2025 é considerado um ano decisivo para a adoção de IA e agentes inteligentes?\n>     *   Como as empresas devem repensar seus negócios com a adoção de IA?\n>     *   O que são os agentes Researcher e Analyst e como eles podem aumentar a produtividade?\n>     *   Como medir o impacto da IA no ambiente de trabalho (proporção entre humanos e agentes)?\n> \n> **Tema Mais Relevante e Plano para o Post**\n> \n> Considerando a amplitude e o potencial de impacto, o tema mais relevante é: **Adoção de Agentes de IA em Várias Indústrias**.\n> \n> **Plano para o Post:**\n> \n> 1.  **Título:** \"Agentes de IA Revolucionam Indústrias: Casos de Uso Inovadores e Impacto em 2025\"\n> 2.  **Introdução:**\n>     *   Breve definição do que são agentes de IA.\n>     *   Destacar o crescimento da adoção de agentes de IA em diferentes setores.\n>     *   Mencionar a previsão de que 2025 será um ano decisivo para a adoção de IA.\n> 3.  **Desenvolvimento:**\n>     *   **Governo:**\n>         *   Exemplos de uso em gestão de políticas públicas, atendimento ao cidadão, etc.\n>         *   Possíveis fontes de informação: notícias sobre iniciativas governamentais que utilizam IA.\n>     *   **Saúde:**\n>         *   Exemplos de uso em diagnóstico, planos de tratamento personalizados, interação com pacientes.\n>         *   Possíveis fontes de informação: artigos científicos, estudos de caso de hospitais e clínicas.\n>     *   **Finanças:**\n>         *   Exemplos de uso em otimização de operações financeiras, detecção de fraudes, análise de risco.\n>         *   Possíveis fontes de informação: notícias sobre a adoção de IA por bancos e instituições financeiras, relatórios de consultorias.\n>     *   **Logística e Cadeia de Suprimentos:**\n>         *   Exemplos de uso em gestão de cadeias de suprimentos, detecção de bloqueios logísticos.\n>         *   Possíveis fontes de informação: notícias sobre empresas de logística que utilizam IA, estudos de caso.\n>     *   **B3 (Bolsa de Valores do Brasil):**\n>         *   Detalhar como a B3 planeja usar agentes de IA para revolucionar suas operações.\n>         *   Possíveis fontes de informação: entrevistas com executivos da B3, comunicados de imprensa.\n> 4.  **Conclusão:**\n>     *   Reafirmar o impacto transformador dos agentes de IA em diversas indústrias.\n>     *   Destacar a importância de entender e se preparar para a adoção de IA.\n>     *   Incentivar a discussão sobre os desafios e oportunidades da IA.\n> \n> \n> Com base nas informações coletadas, aqui está um desenvolvimento mais detalhado dos tópicos para o post sobre a adoção de Agentes de IA em várias indústrias:\n> \n> **1. Governo:**\n> \n> *   **Exemplos de uso:**\n>     *   **Atendimento ao cidadão:** Agentes de IA podem fornecer informações sobre serviços governamentais, agendar atendimentos e responder a perguntas frequentes, liberando funcionários para tarefas mais complexas.\n>     *   **Gestão de políticas públicas:** Análise de dados para identificar áreas que necessitam de mais investimento, prever o impacto de políticas e otimizar a alocação de recursos.\n>     *   **Segurança pública:** Detecção de atividades suspeitas, análise de padrões criminais e otimização do policiamento.\n> *   **Fontes de informação:**\n>     *   Notícias sobre iniciativas governamentais que utilizam IA (e.g., programas de modernização, projetos de cidades inteligentes).\n>     *   Relatórios de consultorias sobre o uso de IA no setor público.\n>     *   Artigos acadêmicos sobre a aplicação de IA em áreas como governança e políticas públicas.\n> \n> **2. Saúde:**\n> \n> *   **Exemplos de uso:**\n>     *   **Diagnóstico:** Análise de exames de imagem (raios-X, tomografias, ressonâncias) para identificar sinais de doenças.\n>     *   **Planos de tratamento personalizados:** Agentes de IA podem analisar o histórico do paciente, resultados de exames e informações genéticas para recomendar tratamentos mais eficazes.\n>     *   **Interação com pacientes:** Chatbots para responder a perguntas, fornecer informações sobre medicamentos e agendar consultas.\n>     *   **Monitoramento remoto:** Acompanhamento de pacientes com doenças crônicas, alertando médicos em caso de emergência.\n> *   **Fontes de informação:**\n>     *   Artigos científicos sobre o uso de IA em medicina.\n>     *   Estudos de caso de hospitais e clínicas que implementaram soluções de IA.\n>     *   Notícias sobre startups e empresas que desenvolvem tecnologias de IA para a saúde.\n> \n> **3. Finanças:**\n> \n> *   **Exemplos de uso:**\n>     *   **Otimização de operações financeiras:** Automação de tarefas como contabilidade, auditoria e gestão de impostos.\n>     *   **Detecção de fraudes:** Análise de transações para identificar padrões suspeitos e prevenir fraudes.\n>     *   **Análise de risco:** Avaliação do risco de crédito, investimentos e outros produtos financeiros.\n>     *   **Atendimento ao cliente:** Chatbots para responder a perguntas, fornecer informações sobre produtos e serviços e auxiliar em transações.\n>     *   **Renegociação de dívidas:** Agentes de IA podem auxiliar na renegociação de dívidas de forma automatizada e personalizada.\n> *   **Fontes de informação:**\n>     *   Notícias sobre a adoção de IA por bancos e instituições financeiras.\n>     *   Relatórios de consultorias sobre o mercado de IA no setor financeiro.\n>     *   Artigos sobre como a IA está transformando a indústria financeira.\n>     *   Exemplos práticos de empresas como Banco BMG que utilizam agentes de IA para renegociação de dívidas.\n> \n> **4. Logística e Cadeia de Suprimentos:**\n> \n> *   **Exemplos de uso:**\n>     *   **Gestão de cadeias de suprimentos:** Otimização do fluxo de produtos, desde a produção até a entrega ao cliente final.\n>     *   **Previsão de demanda:** Análise de dados para prever a demanda por produtos, permitindo que as empresas ajustem seus estoques e produção de acordo.\n>     *   **Detecção de bloqueios logísticos:** Identificação de gargalos e problemas na cadeia de suprimentos, permitindo que as empresas tomem medidas para mitigar esses problemas.\n>     *   **Otimização de rotas:** Cálculo de rotas de entrega mais eficientes, reduzindo custos e tempo de entrega.\n>     *   **Gestão de estoque:** Otimização dos níveis de estoque, evitando tanto a falta quanto o excesso de produtos.\n> *   **Fontes de informação:**\n>     *   Notícias sobre empresas de logística que utilizam IA.\n>     *   Estudos de caso de empresas que implementaram soluções de IA na cadeia de suprimentos.\n>     *   Artigos sobre as tendências da IA na logística.\n> \n> **5. B3 (Bolsa de Valores do Brasil):**\n> \n> *   **Como a B3 planeja usar agentes de IA:**\n>     *   **Aumentar a produtividade interna:** Automatização de tarefas operacionais e repetitivas, liberando os funcionários para atividades mais estratégicas.\n>     *   **Melhorar a experiência dos clientes:** Oferecer serviços mais personalizados e eficientes.\n>     *   **Monitoramento das centrais de atendimento:** O agente Digital Coach analisa aspectos das ligações, identifica falhas na comunicação e mede a eficácia no atendimento ao cliente.\n> *   **Fontes de informação:**\n>     *   Entrevistas com executivos da B3.\n>     *   Comunicados de imprensa da B3.\n>     *   Notícias sobre os investimentos da B3 em IA.\n> \n> Este plano detalhado deve fornecer uma base sólida para a criação de um post informativo e interessante sobre a adoção de agentes de IA em várias indústrias.\n> \n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--------------------------------------------------------------\n",
            "\n",
            "--- 📝 Resultado do Agente 3 (Redator) ---\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "> 🚀 Agentes de IA: A Revolução que Transforma Indústrias! 🤖\n> \n> Já ouviu falar em Agentes de Inteligência Artificial? 🤯 Eles estão remodelando o mundo dos negócios e a forma como vivemos! Deixe-me te contar como:\n> \n> 🏥 Na saúde: diagnósticos mais rápidos e planos de tratamento personalizados. Imagine a precisão!\n> 💰 No mercado financeiro: detecção de fraudes e otimização de investimentos, tudo com a agilidade da IA.\n> 🏭 Na logística: cadeias de suprimentos inteligentes e entregas super eficientes. Adeus, atrasos!\n> 💼 E a B3? 🇧🇷 Eles estão usando agentes de IA para turbinar a produtividade e a experiência do cliente!\n> \n> Especialistas dizem que 2025 será o ano da virada para a adoção de IA. 😲 Está preparado para essa transformação?\n> \n> Compartilhe sua opinião nos comentários! 👇\n> \n> #InteligenciaArtificial #Inovacao #Alura #Tecnologia\n> \n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--------------------------------------------------------------\n",
            "\n",
            "--- 📝 Resultado do Agente 4 (Revisor) ---\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "> O rascunho está bom, mas podemos deixá-lo ainda mais interessante e adequado ao público jovem do Instagram. Aqui estão algumas sugestões:\n> \n> **Problemas identificados:**\n> \n> *   **Tom:** Embora o tom seja entusiasmado, pode ser um pouco mais informal e direto para capturar a atenção do público jovem do Instagram.\n> *   **Linguagem:** Algumas frases soam um pouco formais (\"Deixe-me te contar como\").\n> *   **Chamada para ação (CTA):** Poderíamos fortalecer a CTA para gerar mais engajamento.\n> \n> **Sugestões de melhorias:**\n> \n> *   **Revisão:**\n>     🚀 IA tá ON! 🤖 Descubra como os Agentes de IA estão mudando TUDO! 🤯\n> \n>     Já ouviu falar neles? Os Agentes de Inteligência Artificial chegaram pra transformar o mundo dos negócios e o nosso dia a dia! Se liga em como eles estão sendo usados:\n> \n>     🏥 Na saúde: diagnósticos ultra-rápidos e tratamentos feitos sob medida pra você!\n>     💰 No mercado financeiro: IA combatendo fraudes e turbinando seus investimentos!\n>     🏭 Na logística: entregas super eficientes e sem atrasos (finalmente!).\n>     💼 E a B3? 🇧🇷 Já usa Agentes de IA pra deixar tudo mais rápido e melhorar a experiência de quem investe!\n> \n>     Especialistas estão falando: 2025 vai ser O ANO da IA! 😲 Preparados pro futuro?\n> \n>     Me conta nos comentários: qual área você acha que a IA vai revolucionar mais? 👇\n> \n>     #InteligenciaArtificial #Inovacao #Alura #Tecnologia #IA #Futuro #InteligenciaArtificialNoBrasil\n> *   **Justificativa:**\n>     *   O título foi encurtado e usa uma linguagem mais direta e informal (\"IA tá ON!\").\n>     *   A frase \"Deixe-me te contar como\" foi removida para um tom mais direto.\n>     *   Adicionei a hashtag #InteligenciaArtificialNoBrasil para atingir um público mais específico.\n>     *   A chamada para ação foi alterada para uma pergunta mais aberta e convidativa.\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--------------------------------------------------------------\n"
          ]
        }
      ]
    }
  ]
}